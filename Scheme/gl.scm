
(declare (block)
         (standard-bindings)
         (extended-bindings))

;; (c-declare "#include \"stdlib.h\"")
;; (c-declare "#include <OpenGLES/ES1/gl.h>")
(include "types")

(define (display-gl-error)
  (display "ERROR: ")
  (display (glGetError))
  (newline))

;;; gl constants

(define GL_VERSION_ES_CM_1_0 1)
(define GL_VERSION_ES_CL_1_0 1)
(define GL_VERSION_ES_CM_1_1 1)
(define GL_VERSION_ES_CL_1_1 1)
(define GL_OES_VERSION_1_0 1)
(define GL_OES_VERSION_1_1 1)
(define GL_OES_byte_coordinates 1)
(define GL_OES_compressed_paletted_texture 1)
(define GL_OES_draw_texture 1)
(define GL_OES_fixed_point 1)
(define GL_OES_matrix_get 1)
(define GL_OES_matrix_palette 1)
(define GL_OES_point_size_array 1)
(define GL_OES_point_sprite 1)
(define GL_OES_read_format 1)
(define GL_OES_single_precision 1)
(define GL_DEPTH_BUFFER_BIT 256)
(define GL_STENCIL_BUFFER_BIT 1024)
(define GL_COLOR_BUFFER_BIT 16384)
(define GL_FALSE 0)
(define GL_TRUE 1)
(define GL_POINTS 0)
(define GL_LINES 1)
(define GL_LINE_LOOP 2)
(define GL_LINE_STRIP 3)
(define GL_TRIANGLES 4)
(define GL_TRIANGLE_STRIP 5)
(define GL_TRIANGLE_FAN 6)
(define GL_NEVER 512)
(define GL_LESS 513)
(define GL_EQUAL 514)
(define GL_LEQUAL 515)
(define GL_GREATER 516)
(define GL_NOTEQUAL 517)
(define GL_GEQUAL 518)
(define GL_ALWAYS 519)
(define GL_ZERO 0)
(define GL_ONE 1)
(define GL_SRC_COLOR 768)
(define GL_ONE_MINUS_SRC_COLOR 769)
(define GL_SRC_ALPHA 770)
(define GL_ONE_MINUS_SRC_ALPHA 771)
(define GL_DST_ALPHA 772)
(define GL_ONE_MINUS_DST_ALPHA 773)
(define GL_DST_COLOR 774)
(define GL_ONE_MINUS_DST_COLOR 775)
(define GL_SRC_ALPHA_SATURATE 776)
(define GL_CLIP_PLANE0 12288)
(define GL_CLIP_PLANE1 12289)
(define GL_CLIP_PLANE2 12290)
(define GL_CLIP_PLANE3 12291)
(define GL_CLIP_PLANE4 12292)
(define GL_CLIP_PLANE5 12293)
(define GL_FRONT 1028)
(define GL_BACK 1029)
(define GL_FRONT_AND_BACK 1032)
(define GL_FOG 2912)
(define GL_LIGHTING 2896)
(define GL_TEXTURE_2D 3553)
(define GL_CULL_FACE 2884)
(define GL_ALPHA_TEST 3008)
(define GL_BLEND 3042)
(define GL_COLOR_LOGIC_OP 3058)
(define GL_DITHER 3024)
(define GL_STENCIL_TEST 2960)
(define GL_DEPTH_TEST 2929)
(define GL_POINT_SMOOTH 2832)
(define GL_LINE_SMOOTH 2848)
(define GL_SCISSOR_TEST 3089)
(define GL_COLOR_MATERIAL 2903)
(define GL_NORMALIZE 2977)
(define GL_RESCALE_NORMAL 32826)
(define GL_POLYGON_OFFSET_FILL 32823)
(define GL_VERTEX_ARRAY 32884)
(define GL_NORMAL_ARRAY 32885)
(define GL_COLOR_ARRAY 32886)
(define GL_TEXTURE_COORD_ARRAY 32888)
(define GL_MULTISAMPLE 32925)
(define GL_SAMPLE_ALPHA_TO_COVERAGE 32926)
(define GL_SAMPLE_ALPHA_TO_ONE 32927)
(define GL_SAMPLE_COVERAGE 32928)
(define GL_NO_ERROR 0)
(define GL_INVALID_ENUM 1280)
(define GL_INVALID_VALUE 1281)
(define GL_INVALID_OPERATION 1282)
(define GL_STACK_OVERFLOW 1283)
(define GL_STACK_UNDERFLOW 1284)
(define GL_OUT_OF_MEMORY 1285)
(define GL_EXP 2048)
(define GL_EXP2 2049)
(define GL_FOG_DENSITY 2914)
(define GL_FOG_START 2915)
(define GL_FOG_END 2916)
(define GL_FOG_MODE 2917)
(define GL_FOG_COLOR 2918)
(define GL_CW 2304)
(define GL_CCW 2305)
(define GL_CURRENT_COLOR 2816)
(define GL_CURRENT_NORMAL 2818)
(define GL_CURRENT_TEXTURE_COORDS 2819)
(define GL_POINT_SIZE 2833)
(define GL_POINT_SIZE_MIN 33062)
(define GL_POINT_SIZE_MAX 33063)
(define GL_POINT_FADE_THRESHOLD_SIZE 33064)
(define GL_POINT_DISTANCE_ATTENUATION 33065)
(define GL_SMOOTH_POINT_SIZE_RANGE 2834)
(define GL_LINE_WIDTH 2849)
(define GL_SMOOTH_LINE_WIDTH_RANGE 2850)
(define GL_ALIASED_POINT_SIZE_RANGE 33901)
(define GL_ALIASED_LINE_WIDTH_RANGE 33902)
(define GL_CULL_FACE_MODE 2885)
(define GL_FRONT_FACE 2886)
(define GL_SHADE_MODEL 2900)
(define GL_DEPTH_RANGE 2928)
(define GL_DEPTH_WRITEMASK 2930)
(define GL_DEPTH_CLEAR_VALUE 2931)
(define GL_DEPTH_FUNC 2932)
(define GL_STENCIL_CLEAR_VALUE 2961)
(define GL_STENCIL_FUNC 2962)
(define GL_STENCIL_VALUE_MASK 2963)
(define GL_STENCIL_FAIL 2964)
(define GL_STENCIL_PASS_DEPTH_FAIL 2965)
(define GL_STENCIL_PASS_DEPTH_PASS 2966)
(define GL_STENCIL_REF 2967)
(define GL_STENCIL_WRITEMASK 2968)
(define GL_MATRIX_MODE 2976)
(define GL_VIEWPORT 2978)
(define GL_MODELVIEW_STACK_DEPTH 2979)
(define GL_PROJECTION_STACK_DEPTH 2980)
(define GL_TEXTURE_STACK_DEPTH 2981)
(define GL_MODELVIEW_MATRIX 2982)
(define GL_PROJECTION_MATRIX 2983)
(define GL_TEXTURE_MATRIX 2984)
(define GL_ALPHA_TEST_FUNC 3009)
(define GL_ALPHA_TEST_REF 3010)
(define GL_BLEND_DST 3040)
(define GL_BLEND_SRC 3041)
(define GL_LOGIC_OP_MODE 3056)
(define GL_SCISSOR_BOX 3088)
(define GL_SCISSOR_TEST 3089)
(define GL_COLOR_CLEAR_VALUE 3106)
(define GL_COLOR_WRITEMASK 3107)
(define GL_UNPACK_ALIGNMENT 3317)
(define GL_PACK_ALIGNMENT 3333)
(define GL_MAX_LIGHTS 3377)
(define GL_MAX_CLIP_PLANES 3378)
(define GL_MAX_TEXTURE_SIZE 3379)
(define GL_MAX_MODELVIEW_STACK_DEPTH 3382)
(define GL_MAX_PROJECTION_STACK_DEPTH 3384)
(define GL_MAX_TEXTURE_STACK_DEPTH 3385)
(define GL_MAX_VIEWPORT_DIMS 3386)
(define GL_MAX_TEXTURE_UNITS 34018)
(define GL_SUBPIXEL_BITS 3408)
(define GL_RED_BITS 3410)
(define GL_GREEN_BITS 3411)
(define GL_BLUE_BITS 3412)
(define GL_ALPHA_BITS 3413)
(define GL_DEPTH_BITS 3414)
(define GL_STENCIL_BITS 3415)
(define GL_POLYGON_OFFSET_UNITS 10752)
(define GL_POLYGON_OFFSET_FILL 32823)
(define GL_POLYGON_OFFSET_FACTOR 32824)
(define GL_TEXTURE_BINDING_2D 32873)
(define GL_VERTEX_ARRAY_SIZE 32890)
(define GL_VERTEX_ARRAY_TYPE 32891)
(define GL_VERTEX_ARRAY_STRIDE 32892)
(define GL_NORMAL_ARRAY_TYPE 32894)
(define GL_NORMAL_ARRAY_STRIDE 32895)
(define GL_COLOR_ARRAY_SIZE 32897)
(define GL_COLOR_ARRAY_TYPE 32898)
(define GL_COLOR_ARRAY_STRIDE 32899)
(define GL_TEXTURE_COORD_ARRAY_SIZE 32904)
(define GL_TEXTURE_COORD_ARRAY_TYPE 32905)
(define GL_TEXTURE_COORD_ARRAY_STRIDE 32906)
(define GL_VERTEX_ARRAY_POINTER 32910)
(define GL_NORMAL_ARRAY_POINTER 32911)
(define GL_COLOR_ARRAY_POINTER 32912)
(define GL_TEXTURE_COORD_ARRAY_POINTER 32914)
(define GL_SAMPLE_BUFFERS 32936)
(define GL_SAMPLES 32937)
(define GL_SAMPLE_COVERAGE_VALUE 32938)
(define GL_SAMPLE_COVERAGE_INVERT 32939)
(define GL_IMPLEMENTATION_COLOR_READ_TYPE_OES 35738)
(define GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES 35739)
(define GL_NUM_COMPRESSED_TEXTURE_FORMATS 34466)
(define GL_COMPRESSED_TEXTURE_FORMATS 34467)
(define GL_DONT_CARE 4352)
(define GL_FASTEST 4353)
(define GL_NICEST 4354)
(define GL_PERSPECTIVE_CORRECTION_HINT 3152)
(define GL_POINT_SMOOTH_HINT 3153)
(define GL_LINE_SMOOTH_HINT 3154)
(define GL_FOG_HINT 3156)
(define GL_GENERATE_MIPMAP_HINT 33170)
(define GL_LIGHT_MODEL_AMBIENT 2899)
(define GL_LIGHT_MODEL_TWO_SIDE 2898)
(define GL_AMBIENT 4608)
(define GL_DIFFUSE 4609)
(define GL_SPECULAR 4610)
(define GL_POSITION 4611)
(define GL_SPOT_DIRECTION 4612)
(define GL_SPOT_EXPONENT 4613)
(define GL_SPOT_CUTOFF 4614)
(define GL_CONSTANT_ATTENUATION 4615)
(define GL_LINEAR_ATTENUATION 4616)
(define GL_QUADRATIC_ATTENUATION 4617)
(define GL_BYTE 5120)
(define GL_UNSIGNED_BYTE 5121)
(define GL_SHORT 5122)
(define GL_UNSIGNED_SHORT 5123)
(define GL_FLOAT 5126)
(define GL_FIXED 5132)
(define GL_CLEAR 5376)
(define GL_AND 5377)
(define GL_AND_REVERSE 5378)
(define GL_COPY 5379)
(define GL_AND_INVERTED 5380)
(define GL_NOOP 5381)
(define GL_XOR 5382)
(define GL_OR 5383)
(define GL_NOR 5384)
(define GL_EQUIV 5385)
(define GL_INVERT 5386)
(define GL_OR_REVERSE 5387)
(define GL_COPY_INVERTED 5388)
(define GL_OR_INVERTED 5389)
(define GL_NAND 5390)
(define GL_SET 5391)
(define GL_EMISSION 5632)
(define GL_SHININESS 5633)
(define GL_AMBIENT_AND_DIFFUSE 5634)
(define GL_MODELVIEW 5888)
(define GL_PROJECTION 5889)
(define GL_TEXTURE 5890)
(define GL_ALPHA 6406)
(define GL_RGB 6407)
(define GL_RGBA 6408)
(define GL_LUMINANCE 6409)
(define GL_LUMINANCE_ALPHA 6410)
(define GL_UNPACK_ALIGNMENT 3317)
(define GL_PACK_ALIGNMENT 3333)
(define GL_UNSIGNED_SHORT_4_4_4_4 32819)
(define GL_UNSIGNED_SHORT_5_5_5_1 32820)
(define GL_UNSIGNED_SHORT_5_6_5 33635)
(define GL_FLAT 7424)
(define GL_SMOOTH 7425)
(define GL_KEEP 7680)
(define GL_REPLACE 7681)
(define GL_INCR 7682)
(define GL_DECR 7683)
(define GL_VENDOR 7936)
(define GL_RENDERER 7937)
(define GL_VERSION 7938)
(define GL_EXTENSIONS 7939)
(define GL_MODULATE 8448)
(define GL_DECAL 8449)
(define GL_ADD 260)
(define GL_TEXTURE_ENV_MODE 8704)
(define GL_TEXTURE_ENV_COLOR 8705)
(define GL_TEXTURE_ENV 8960)
(define GL_NEAREST 9728)
(define GL_LINEAR 9729)
(define GL_NEAREST_MIPMAP_NEAREST 9984)
(define GL_LINEAR_MIPMAP_NEAREST 9985)
(define GL_NEAREST_MIPMAP_LINEAR 9986)
(define GL_LINEAR_MIPMAP_LINEAR 9987)
(define GL_TEXTURE_MAG_FILTER 10240)
(define GL_TEXTURE_MIN_FILTER 10241)
(define GL_TEXTURE_WRAP_S 10242)
(define GL_TEXTURE_WRAP_T 10243)
(define GL_GENERATE_MIPMAP 33169)
(define GL_TEXTURE0 33984)
(define GL_TEXTURE1 33985)
(define GL_TEXTURE2 33986)
(define GL_TEXTURE3 33987)
(define GL_TEXTURE4 33988)
(define GL_TEXTURE5 33989)
(define GL_TEXTURE6 33990)
(define GL_TEXTURE7 33991)
(define GL_TEXTURE8 33992)
(define GL_TEXTURE9 33993)
(define GL_TEXTURE10 33994)
(define GL_TEXTURE11 33995)
(define GL_TEXTURE12 33996)
(define GL_TEXTURE13 33997)
(define GL_TEXTURE14 33998)
(define GL_TEXTURE15 33999)
(define GL_TEXTURE16 34000)
(define GL_TEXTURE17 34001)
(define GL_TEXTURE18 34002)
(define GL_TEXTURE19 34003)
(define GL_TEXTURE20 34004)
(define GL_TEXTURE21 34005)
(define GL_TEXTURE22 34006)
(define GL_TEXTURE23 34007)
(define GL_TEXTURE24 34008)
(define GL_TEXTURE25 34009)
(define GL_TEXTURE26 34010)
(define GL_TEXTURE27 34011)
(define GL_TEXTURE28 34012)
(define GL_TEXTURE29 34013)
(define GL_TEXTURE30 34014)
(define GL_TEXTURE31 34015)
(define GL_ACTIVE_TEXTURE 34016)
(define GL_CLIENT_ACTIVE_TEXTURE 34017)
(define GL_REPEAT 10497)
(define GL_CLAMP_TO_EDGE 33071)
(define GL_PALETTE4_RGB8_OES 35728)
(define GL_PALETTE4_RGBA8_OES 35729)
(define GL_PALETTE4_R5_G6_B5_OES 35730)
(define GL_PALETTE4_RGBA4_OES 35731)
(define GL_PALETTE4_RGB5_A1_OES 35732)
(define GL_PALETTE8_RGB8_OES 35733)
(define GL_PALETTE8_RGBA8_OES 35734)
(define GL_PALETTE8_R5_G6_B5_OES 35735)
(define GL_PALETTE8_RGBA4_OES 35736)
(define GL_PALETTE8_RGB5_A1_OES 35737)
(define GL_LIGHT0 16384)
(define GL_LIGHT1 16385)
(define GL_LIGHT2 16386)
(define GL_LIGHT3 16387)
(define GL_LIGHT4 16388)
(define GL_LIGHT5 16389)
(define GL_LIGHT6 16390)
(define GL_LIGHT7 16391)
(define GL_ARRAY_BUFFER 34962)
(define GL_ELEMENT_ARRAY_BUFFER 34963)
(define GL_ARRAY_BUFFER_BINDING 34964)
(define GL_ELEMENT_ARRAY_BUFFER_BINDING 34965)
(define GL_VERTEX_ARRAY_BUFFER_BINDING 34966)
(define GL_NORMAL_ARRAY_BUFFER_BINDING 34967)
(define GL_COLOR_ARRAY_BUFFER_BINDING 34968)
(define GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING 34970)
(define GL_STATIC_DRAW 35044)
(define GL_DYNAMIC_DRAW 35048)
(define GL_BUFFER_SIZE 34660)
(define GL_BUFFER_USAGE 34661)
(define GL_SUBTRACT 34023)
(define GL_COMBINE 34160)
(define GL_COMBINE_RGB 34161)
(define GL_COMBINE_ALPHA 34162)
(define GL_RGB_SCALE 34163)
(define GL_ADD_SIGNED 34164)
(define GL_INTERPOLATE 34165)
(define GL_CONSTANT 34166)
(define GL_PRIMARY_COLOR 34167)
(define GL_PREVIOUS 34168)
(define GL_OPERAND0_RGB 34192)
(define GL_OPERAND1_RGB 34193)
(define GL_OPERAND2_RGB 34194)
(define GL_OPERAND0_ALPHA 34200)
(define GL_OPERAND1_ALPHA 34201)
(define GL_OPERAND2_ALPHA 34202)
(define GL_ALPHA_SCALE 3356)
(define GL_SRC0_RGB 34176)
(define GL_SRC1_RGB 34177)
(define GL_SRC2_RGB 34178)
(define GL_SRC0_ALPHA 34184)
(define GL_SRC1_ALPHA 34185)
(define GL_SRC2_ALPHA 34186)
(define GL_DOT3_RGB 34478)
(define GL_DOT3_RGBA 34479)
(define GL_TEXTURE_CROP_RECT_OES 35741)
(define GL_MODELVIEW_MATRIX_FLOAT_AS_INT_BITS_OES 35213)
(define GL_PROJECTION_MATRIX_FLOAT_AS_INT_BITS_OES 35214)
(define GL_TEXTURE_MATRIX_FLOAT_AS_INT_BITS_OES 35215)
(define GL_MAX_VERTEX_UNITS_OES 34468)
(define GL_MAX_PALETTE_MATRICES_OES 34882)
(define GL_MATRIX_PALETTE_OES 34880)
(define GL_MATRIX_INDEX_ARRAY_OES 34884)
(define GL_WEIGHT_ARRAY_OES 34477)
(define GL_CURRENT_PALETTE_MATRIX_OES 34883)
(define GL_MATRIX_INDEX_ARRAY_SIZE_OES 34886)
(define GL_MATRIX_INDEX_ARRAY_TYPE_OES 34887)
(define GL_MATRIX_INDEX_ARRAY_STRIDE_OES 34888)
(define GL_MATRIX_INDEX_ARRAY_POINTER_OES 34889)
(define GL_MATRIX_INDEX_ARRAY_BUFFER_BINDING_OES 35742)
(define GL_WEIGHT_ARRAY_SIZE_OES 34475)
(define GL_WEIGHT_ARRAY_TYPE_OES 34473)
(define GL_WEIGHT_ARRAY_STRIDE_OES 34474)
(define GL_WEIGHT_ARRAY_POINTER_OES 34476)
(define GL_WEIGHT_ARRAY_BUFFER_BINDING_OES 34974)
(define GL_POINT_SIZE_ARRAY_OES 35740)
(define GL_POINT_SIZE_ARRAY_TYPE_OES 35210)
(define GL_POINT_SIZE_ARRAY_STRIDE_OES 35211)
(define GL_POINT_SIZE_ARRAY_POINTER_OES 35212)
(define GL_POINT_SIZE_ARRAY_BUFFER_BINDING_OES 35743)
(define GL_POINT_SPRITE_OES 34913)
(define GL_COORD_REPLACE_OES 34914)



;;; gl functions

(define glGetError (c-lambda () GLenum "glGetError"))

(define glClearColor (c-lambda (GLclampf GLclampf GLclampf GLclampf) void "glClearColor"))
(define glClear (c-lambda (GLbitfield) void "glClear"))

(define glEnable (c-lambda (GLenum) void "glEnable"))
(define glBlendFunc (c-lambda (GLenum GLenum) void "glBlendFunc"))

(define glTranslatef (c-lambda (GLfloat GLfloat GLfloat) void "glTranslatef"))
(define glRotatef (c-lambda (GLfloat GLfloat GLfloat GLfloat) void "glRotatef"))
(define glScalef (c-lambda (GLfloat GLfloat GLfloat) void "glScalef"))

(define glGenTextures (c-lambda (GLsizei (pointer GLuint)) void "glGenTextures"))
(define glBindTexture (c-lambda (GLenum GLuint) void "glBindTexture"))
(define glTexImage2D (c-lambda (GLenum GLint GLenum GLsizei GLsizei GLint GLenum GLenum (pointer GLvoid)) void "glTexImage2D"))
(define glTexParameteri (c-lambda (GLenum GLenum GLint) void "glTexParameteri"))
(define glTexEnvi (c-lambda (GLenum GLenum GLint) void "glTexEnvi"))

(define glVertexPointer (c-lambda (GLint GLenum GLint GLfloat*) void "glVertexPointer"))
(define glColorPointer (c-lambda (GLint GLenum GLint GLubyte*) void "glColorPointer"))
(define glNormalPointer (c-lambda (GLenum GLsizei (pointer GLvoid)) void "glNormalPointer"))
(define glTexCoordPointer (c-lambda (GLint GLenum GLsizei (pointer GLvoid)) void "glTexCoordPointer"))
(define glEnableClientState (c-lambda (GLenum) void "glEnableClientState"))
(define glDisableClientState (c-lambda (GLenum) void "glDisableClientState"))
(define glDrawArrays (c-lambda (GLenum GLint GLsizei) void "glDrawArrays"))
(define glDrawElements (c-lambda (GLenum GLsizei GLenum (pointer GLvoid)) void "glDrawElements"))

(define glOrthof (c-lambda (GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat) void "glOrthof"))
(define glMatrixMode (c-lambda (GLenum) void "glMatrixMode"))
(define glMultMatrixf (c-lambda ((pointer GLfloat)) void "glMultMatrixf"))
(define glLoadMatrixf (c-lambda ((pointer GLfloat)) void "glLoadMatrixf"))
(define glColor4f (c-lambda (GLfloat GLfloat GLfloat GLfloat) void "glColor4f"))
(define glLoadIdentity (c-lambda () void "glLoadIdentity"))
(define glFrustumf (c-lambda (GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat) void "glFrustumf"))
(define glCullFace (c-lambda (GLenum) void "glCullFace"))
(define glDisable (c-lambda (GLenum) void "glDisable"))
(define glDepthMask (c-lambda (GLboolean) void "glDepthMask"))

(define glFogf (c-lambda (GLenum GLfloat) void "glFogf"))
(define glFogfv (c-lambda (GLenum (pointer GLfloat)) void "glFogfv"))
(define glFogx (c-lambda (GLenum GLfixed) void "glFogx"))
(define glFogxv (c-lambda (GLenum (pointer GLfixed)) void "glFogxv"))
(define glLightf (c-lambda (GLenum GLenum GLfloat) void "glLightf"))
(define glLightfv (c-lambda (GLenum GLenum (pointer GLfloat)) void "glLightfv"))
(define glMaterialf (c-lambda (GLenum GLenum GLfloat) void "glMaterialf"))
(define glMaterialfv (c-lambda (GLenum GLenum (pointer GLfloat)) void "glMaterialfv"))
(define glShadeModel (c-lambda (GLenum) void "glShadeModel"))
(define glLightModelf (c-lambda (GLenum GLfloat) void "glLightModelf"))
(define glLightModelfv (c-lambda (GLenum (pointer GLfloat)) void "glLightModelfv"))

(define glReadPixels (c-lambda (GLint GLint GLsizei GLsizei GLenum GLenum (pointer GLvoid)) void "glReadPixels"))

;;; definitions generated from opengl, NOT opengl es, some of these work
;; (define glBitmap (c-lambda (GLsizei GLsizei GLfloat GLfloat GLfloat GLfloat (pointer GLubyte)) void "glBitmap"))
;; (define glBlendColor (c-lambda (GLclampf GLclampf GLclampf GLclampf) void "glBlendColor"))
;; (define glBlendEquation (c-lambda (GLenum) void "glBlendEquation"))
;; (define glBlendEquationSeparate (c-lambda (GLenum GLenum) void "glBlendEquationSeparate"))
;; (define glCallList (c-lambda (GLuint) void "glCallList"))
;; (define glCallLists (c-lambda (GLsizei GLenum (pointer GLvoid)) void "glCallLists"))
;; (define glClearAccum (c-lambda (GLfloat GLfloat GLfloat GLfloat) void "glClearAccum"))
;; (define glClearDepth (c-lambda (GLclampd) void "glClearDepth"))
;; (define glClearIndex (c-lambda (GLfloat) void "glClearIndex"))
;; (define glClearStencil (c-lambda (GLint) void "glClearStencil"))
;; (define glClipPlane (c-lambda (GLenum (pointer GLfloat)) void "glClipPlane"))
;; (define glColorMask (c-lambda (GLboolean GLboolean GLboolean GLboolean) void "glColorMask"))
;; (define glColorMaterial (c-lambda (GLenum GLenum) void "glColorMaterial"))
;; (define glColorPointer (c-lambda (GLint GLenum GLsizei (pointer GLvoid)) void "glColorPointer"))
;; (define glColorSubTable (c-lambda (GLenum GLsizei GLsizei GLenum GLenum (pointer GLvoid)) void "glColorSubTable"))
;; (define glColorTable (c-lambda (GLenum GLenum GLsizei GLenum GLenum (pointer GLvoid)) void "glColorTable"))
;; (define glColorTableParameterfv (c-lambda (GLenum GLenum (pointer GLfloat)) void "glColorTableParameterfv"))
;; (define glColorTableParameteriv (c-lambda (GLenum GLenum (pointer GLint)) void "glColorTableParameteriv"))
;; (define glConvolutionFilter1D (c-lambda (GLenum GLenum GLsizei GLenum GLenum (pointer GLvoid)) void "glConvolutionFilter1D"))
;; (define glConvolutionFilter2D (c-lambda (GLenum GLenum GLsizei GLsizei GLenum GLenum (pointer GLvoid)) void "glConvolutionFilter2D"))
;; (define glConvolutionParameterf (c-lambda (GLenum GLenum GLfloat) void "glConvolutionParameterf"))
;; (define glConvolutionParameterfv (c-lambda (GLenum GLenum (pointer GLfloat)) void "glConvolutionParameterfv"))
;; (define glConvolutionParameteri (c-lambda (GLenum GLenum GLint) void "glConvolutionParameteri"))
;; (define glConvolutionParameteriv (c-lambda (GLenum GLenum (pointer GLint)) void "glConvolutionParameteriv"))
;; (define glCopyColorSubTable (c-lambda (GLenum GLsizei GLint GLint GLsizei) void "glCopyColorSubTable"))
;; (define glCopyColorTable (c-lambda (GLenum GLenum GLint GLint GLsizei) void "glCopyColorTable"))
;; (define glCopyConvolutionFilter1D (c-lambda (GLenum GLenum GLint GLint GLsizei) void "glCopyConvolutionFilter1D"))
;; (define glCopyConvolutionFilter2D (c-lambda (GLenum GLenum GLint GLint GLsizei GLsizei) void "glCopyConvolutionFilter2D"))
;; (define glCopyPixels (c-lambda (GLint GLint GLsizei GLsizei GLenum) void "glCopyPixels"))
;; (define glCopyTexImage1D (c-lambda (GLenum GLint GLenum GLint GLint GLsizei GLint) void "glCopyTexImage1D"))
;; (define glCopyTexImage2D (c-lambda (GLenum GLint GLenum GLint GLint GLsizei GLsizei GLint) void "glCopyTexImage2D"))
;; (define glCopyTexSubImage1D (c-lambda (GLenum GLint GLint GLint GLint GLsizei) void "glCopyTexSubImage1D"))
;; (define glCopyTexSubImage2D (c-lambda (GLenum GLint GLint GLint GLint GLint GLsizei GLsizei) void "glCopyTexSubImage2D"))
;; (define glCopyTexSubImage3D (c-lambda (GLenum GLint GLint GLint GLint GLint GLint GLsizei GLsizei) void "glCopyTexSubImage3D"))
;; (define glDeleteLists (c-lambda (GLuint GLsizei) void "glDeleteLists"))
;; (define glDeleteTextures (c-lambda (GLsizei (pointer GLuint)) void "glDeleteTextures"))
;; (define glDepthFunc (c-lambda (GLenum) void "glDepthFunc"))
;; (define glDepthRange (c-lambda (GLclampd GLclampd) void "glDepthRange"))
;; (define glDrawBuffer (c-lambda (GLenum) void "glDrawBuffer"))
;; (define glDrawPixels (c-lambda (GLsizei GLsizei GLenum GLenum (pointer GLvoid)) void "glDrawPixels"))
;; (define glDrawRangeElements (c-lambda (GLenum GLuint GLuint GLsizei GLenum (pointer GLvoid)) void "glDrawRangeElements"))
;; (define glEdgeFlag (c-lambda (GLboolean) void "glEdgeFlag"))
;; (define glEdgeFlagPointer (c-lambda (GLsizei (pointer GLvoid)) void "glEdgeFlagPointer"))
;; (define glEdgeFlagv (c-lambda ((pointer GLboolean)) void "glEdgeFlagv"))
;; (define glEnableClientState (c-lambda (GLenum) void "glEnableClientState"))
;; (define glEndList (c-lambda () void "glEndList"))
;; (define glEvalCoord1d (c-lambda (GLfloat) void "glEvalCoord1d"))
;; (define glEvalCoord1dv (c-lambda ((pointer GLfloat)) void "glEvalCoord1dv"))
;; (define glEvalCoord1f (c-lambda (GLfloat) void "glEvalCoord1f"))
;; (define glEvalCoord1fv (c-lambda ((pointer GLfloat)) void "glEvalCoord1fv"))
;; (define glEvalCoord2d (c-lambda (GLfloat GLfloat) void "glEvalCoord2d"))
;; (define glEvalCoord2dv (c-lambda ((pointer GLfloat)) void "glEvalCoord2dv"))
;; (define glEvalCoord2f (c-lambda (GLfloat GLfloat) void "glEvalCoord2f"))
;; (define glEvalCoord2fv (c-lambda ((pointer GLfloat)) void "glEvalCoord2fv"))
;; (define glEvalMesh1 (c-lambda (GLenum GLint GLint) void "glEvalMesh1"))
;; (define glEvalMesh2 (c-lambda (GLenum GLint GLint GLint GLint) void "glEvalMesh2"))
;; (define glEvalPoint1 (c-lambda (GLint) void "glEvalPoint1"))
;; (define glEvalPoint2 (c-lambda (GLint GLint) void "glEvalPoint2"))
;; (define glFeedbackBuffer (c-lambda (GLsizei GLenum (pointer GLfloat)) void "glFeedbackBuffer"))
;; (define glFinish (c-lambda () void "glFinish"))
;; (define glFlush (c-lambda () void "glFlush"))
;; (define glFrontFace (c-lambda (GLenum) void "glFrontFace"))
;; (define glGenLists (c-lambda (GLsizei) GLuint "glGenLists"))
;; (define glGetBooleanv (c-lambda (GLenum (pointer GLboolean)) void "glGetBooleanv"))
;; (define glGetClipPlane (c-lambda (GLenum (pointer GLfloat)) void "glGetClipPlane"))
;; (define glGetColorTable (c-lambda (GLenum GLenum GLenum (pointer GLvoid)) void "glGetColorTable"))
;; (define glGetColorTableParameterfv (c-lambda (GLenum GLenum (pointer GLfloat)) void "glGetColorTableParameterfv"))
;; (define glGetColorTableParameteriv (c-lambda (GLenum GLenum (pointer GLint)) void "glGetColorTableParameteriv"))
;; (define glGetConvolutionFilter (c-lambda (GLenum GLenum GLenum (pointer GLvoid)) void "glGetConvolutionFilter"))
;; (define glGetConvolutionParameterfv (c-lambda (GLenum GLenum (pointer GLfloat)) void "glGetConvolutionParameterfv"))
;; (define glGetConvolutionParameteriv (c-lambda (GLenum GLenum (pointer GLint)) void "glGetConvolutionParameteriv"))
;; (define glGetDoublev (c-lambda (GLenum (pointer GLfloat)) void "glGetDoublev"))
;; (define glGetFloatv (c-lambda (GLenum (pointer GLfloat)) void "glGetFloatv"))
;; (define glGetHistogram (c-lambda (GLenum GLboolean GLenum GLenum (pointer GLvoid)) void "glGetHistogram"))
;; (define glGetHistogramParameterfv (c-lambda (GLenum GLenum (pointer GLfloat)) void "glGetHistogramParameterfv"))
;; (define glGetHistogramParameteriv (c-lambda (GLenum GLenum (pointer GLint)) void "glGetHistogramParameteriv"))
;; (define glGetIntegerv (c-lambda (GLenum (pointer GLint)) void "glGetIntegerv"))
;; (define glGetLightfv (c-lambda (GLenum GLenum (pointer GLfloat)) void "glGetLightfv"))
;; (define glGetLightiv (c-lambda (GLenum GLenum (pointer GLint)) void "glGetLightiv"))
;; (define glGetMapdv (c-lambda (GLenum GLenum (pointer GLfloat)) void "glGetMapdv"))
;; (define glGetMapfv (c-lambda (GLenum GLenum (pointer GLfloat)) void "glGetMapfv"))
;; (define glGetMapiv (c-lambda (GLenum GLenum (pointer GLint)) void "glGetMapiv"))
;; (define glGetMaterialfv (c-lambda (GLenum GLenum (pointer GLfloat)) void "glGetMaterialfv"))
;; (define glGetMaterialiv (c-lambda (GLenum GLenum (pointer GLint)) void "glGetMaterialiv"))
;; (define glGetMinmax (c-lambda (GLenum GLboolean GLenum GLenum (pointer GLvoid)) void "glGetMinmax"))
;; (define glGetMinmaxParameterfv (c-lambda (GLenum GLenum (pointer GLfloat)) void "glGetMinmaxParameterfv"))
;; (define glGetMinmaxParameteriv (c-lambda (GLenum GLenum (pointer GLint)) void "glGetMinmaxParameteriv"))
;; (define glGetPixelMapfv (c-lambda (GLenum (pointer GLfloat)) void "glGetPixelMapfv"))
;; (define glGetPixelMapuiv (c-lambda (GLenum (pointer GLuint)) void "glGetPixelMapuiv"))
;; (define glGetPixelMapusv (c-lambda (GLenum (pointer GLushort)) void "glGetPixelMapusv"))
;; (define glGetPointerv (c-lambda (GLenum (pointer (pointer GLvoid))) void "glGetPointerv"))
;; (define glGetPolygonStipple (c-lambda ((pointer GLubyte)) void "glGetPolygonStipple"))
;; (define glGetSeparableFilter (c-lambda (GLenum GLenum GLenum (pointer GLvoid) (pointer GLvoid) (pointer GLvoid)) void "glGetSeparableFilter"))
;; (define glGetString (c-lambda (GLenum) (pointer GLubyte) "glGetString"))
;; (define glGetTexEnvfv (c-lambda (GLenum GLenum (pointer GLfloat)) void "glGetTexEnvfv"))
;; (define glGetTexEnviv (c-lambda (GLenum GLenum (pointer GLint)) void "glGetTexEnviv"))
;; (define glGetTexGendv (c-lambda (GLenum GLenum (pointer GLfloat)) void "glGetTexGendv"))
;; (define glGetTexGenfv (c-lambda (GLenum GLenum (pointer GLfloat)) void "glGetTexGenfv"))
;; (define glGetTexGeniv (c-lambda (GLenum GLenum (pointer GLint)) void "glGetTexGeniv"))
;; (define glGetTexImage (c-lambda (GLenum GLint GLenum GLenum (pointer GLvoid)) void "glGetTexImage"))
;; (define glGetTexLevelParameterfv (c-lambda (GLenum GLint GLenum (pointer GLfloat)) void "glGetTexLevelParameterfv"))
;; (define glGetTexLevelParameteriv (c-lambda (GLenum GLint GLenum (pointer GLint)) void "glGetTexLevelParameteriv"))
;; (define glGetTexParameterfv (c-lambda (GLenum GLenum (pointer GLfloat)) void "glGetTexParameterfv"))
;; (define glGetTexParameteriv (c-lambda (GLenum GLenum (pointer GLint)) void "glGetTexParameteriv"))
;; (define glHint (c-lambda (GLenum GLenum) void "glHint"))
;; (define glHistogram (c-lambda (GLenum GLsizei GLenum GLboolean) void "glHistogram"))
;; (define glIndexMask (c-lambda (GLuint) void "glIndexMask"))
;; (define glIndexPointer (c-lambda (GLenum GLsizei (pointer GLvoid)) void "glIndexPointer"))
;; (define glIndexd (c-lambda (GLfloat) void "glIndexd"))
;; (define glIndexdv (c-lambda ((pointer GLfloat)) void "glIndexdv"))
;; (define glIndexf (c-lambda (GLfloat) void "glIndexf"))
;; (define glIndexfv (c-lambda ((pointer GLfloat)) void "glIndexfv"))
;; (define glIndexi (c-lambda (GLint) void "glIndexi"))
;; (define glIndexiv (c-lambda ((pointer GLint)) void "glIndexiv"))
;; (define glIndexs (c-lambda (GLshort) void "glIndexs"))
;; (define glIndexsv (c-lambda ((pointer GLshort)) void "glIndexsv"))
;; (define glIndexub (c-lambda (GLubyte) void "glIndexub"))
;; (define glIndexubv (c-lambda ((pointer GLubyte)) void "glIndexubv"))
;; (define glInitNames (c-lambda () void "glInitNames"))
;; (define glInterleavedArrays (c-lambda (GLenum GLsizei (pointer GLvoid)) void "glInterleavedArrays"))
;; (define glIsEnabled (c-lambda (GLenum) GLboolean "glIsEnabled"))
;; (define glIsList (c-lambda (GLuint) GLboolean "glIsList"))
;; (define glIsTexture (c-lambda (GLuint) GLboolean "glIsTexture"))
;; (define glLightModeli (c-lambda (GLenum GLint) void "glLightModeli"))
;; (define glLightModeliv (c-lambda (GLenum (pointer GLint)) void "glLightModeliv"))
;; (define glLighti (c-lambda (GLenum GLenum GLint) void "glLighti"))
;; (define glLightiv (c-lambda (GLenum GLenum (pointer GLint)) void "glLightiv"))
;; (define glLineStipple (c-lambda (GLint GLushort) void "glLineStipple"))
;; (define glLineWidth (c-lambda (GLfloat) void "glLineWidth"))
;; (define glListBase (c-lambda (GLuint) void "glListBase"))
;; (define glLoadMatrixd (c-lambda ((pointer GLfloat)) void "glLoadMatrixd"))
;; (define glLoadName (c-lambda (GLuint) void "glLoadName"))
;; (define glLogicOp (c-lambda (GLenum) void "glLogicOp"))
;; (define glMap1d (c-lambda (GLenum GLfloat GLfloat GLint GLint (pointer GLfloat)) void "glMap1d"))
;; (define glMap1f (c-lambda (GLenum GLfloat GLfloat GLint GLint (pointer GLfloat)) void "glMap1f"))
;; (define glMap2d (c-lambda (GLenum GLfloat GLfloat GLint GLint GLfloat GLfloat GLint GLint (pointer GLfloat)) void "glMap2d"))
;; (define glMap2f (c-lambda (GLenum GLfloat GLfloat GLint GLint GLfloat GLfloat GLint GLint (pointer GLfloat)) void "glMap2f"))
;; (define glMapGrid1d (c-lambda (GLint GLfloat GLfloat) void "glMapGrid1d"))
;; (define glMapGrid1f (c-lambda (GLint GLfloat GLfloat) void "glMapGrid1f"))
;; (define glMapGrid2d (c-lambda (GLint GLfloat GLfloat GLint GLfloat GLfloat) void "glMapGrid2d"))
;; (define glMapGrid2f (c-lambda (GLint GLfloat GLfloat GLint GLfloat GLfloat) void "glMapGrid2f"))
;; (define glMaterialf (c-lambda (GLenum GLenum GLfloat) void "glMaterialf"))
;; (define glMaterialfv (c-lambda (GLenum GLenum (pointer GLfloat)) void "glMaterialfv"))
;; (define glMateriali (c-lambda (GLenum GLenum GLint) void "glMateriali"))
;; (define glMaterialiv (c-lambda (GLenum GLenum (pointer GLint)) void "glMaterialiv"))
;; (define glMinmax (c-lambda (GLenum GLenum GLboolean) void "glMinmax"))
;; (define glMultMatrixd (c-lambda ((pointer GLfloat)) void "glMultMatrixd"))
;; (define glMultMatrixf (c-lambda ((pointer GLfloat)) void "glMultMatrixf"))
;; (define glNewList (c-lambda (GLuint GLenum) void "glNewList"))
;; (define glNormal3b (c-lambda (GLbyte GLbyte GLbyte) void "glNormal3b"))
;; (define glNormal3bv (c-lambda ((pointer GLbyte)) void "glNormal3bv"))
;; (define glNormal3d (c-lambda (GLfloat GLfloat GLfloat) void "glNormal3d"))
;; (define glNormal3dv (c-lambda ((pointer GLfloat)) void "glNormal3dv"))
;; (define glNormal3f (c-lambda (GLfloat GLfloat GLfloat) void "glNormal3f"))
;; (define glNormal3fv (c-lambda ((pointer GLfloat)) void "glNormal3fv"))
;; (define glNormal3i (c-lambda (GLint GLint GLint) void "glNormal3i"))
;; (define glNormal3iv (c-lambda ((pointer GLint)) void "glNormal3iv"))
;; (define glNormal3s (c-lambda (GLshort GLshort GLshort) void "glNormal3s"))
;; (define glNormal3sv (c-lambda ((pointer GLshort)) void "glNormal3sv"))
;; (define glPassThrough (c-lambda (GLfloat) void "glPassThrough"))
;; (define glPixelMapfv (c-lambda (GLenum GLint (pointer GLfloat)) void "glPixelMapfv"))
;; (define glPixelMapuiv (c-lambda (GLenum GLint (pointer GLuint)) void "glPixelMapuiv"))
;; (define glPixelMapusv (c-lambda (GLenum GLint (pointer GLushort)) void "glPixelMapusv"))
;; (define glPixelStoref (c-lambda (GLenum GLfloat) void "glPixelStoref"))
;; (define glPixelStorei (c-lambda (GLenum GLint) void "glPixelStorei"))
;; (define glPixelTransferf (c-lambda (GLenum GLfloat) void "glPixelTransferf"))
;; (define glPixelTransferi (c-lambda (GLenum GLint) void "glPixelTransferi"))
;; (define glPixelZoom (c-lambda (GLfloat GLfloat) void "glPixelZoom"))
;; (define glPointSize (c-lambda (GLfloat) void "glPointSize"))
;; (define glPolygonMode (c-lambda (GLenum GLenum) void "glPolygonMode"))
;; (define glPolygonOffset (c-lambda (GLfloat GLfloat) void "glPolygonOffset"))
;; (define glPolygonStipple (c-lambda ((pointer GLubyte)) void "glPolygonStipple"))
;; (define glPopAttrib (c-lambda () void "glPopAttrib"))
;; (define glPopClientAttrib (c-lambda () void "glPopClientAttrib"))
;; (define glPopMatrix (c-lambda () void "glPopMatrix"))
;; (define glPopName (c-lambda () void "glPopName"))
;; (define glPrioritizeTextures (c-lambda (GLsizei (pointer GLuint) (pointer GLclampf)) void "glPrioritizeTextures"))
;; (define glPushAttrib (c-lambda (GLbitfield) void "glPushAttrib"))
;; (define glPushClientAttrib (c-lambda (GLbitfield) void "glPushClientAttrib"))
;; (define glPushMatrix (c-lambda () void "glPushMatrix"))
;; (define glPushName (c-lambda (GLuint) void "glPushName"))
;; (define glRasterPos2d (c-lambda (GLfloat GLfloat) void "glRasterPos2d"))
;; (define glRasterPos2dv (c-lambda ((pointer GLfloat)) void "glRasterPos2dv"))
;; (define glRasterPos2f (c-lambda (GLfloat GLfloat) void "glRasterPos2f"))
;; (define glRasterPos2fv (c-lambda ((pointer GLfloat)) void "glRasterPos2fv"))
;; (define glRasterPos2i (c-lambda (GLint GLint) void "glRasterPos2i"))
;; (define glRasterPos2iv (c-lambda ((pointer GLint)) void "glRasterPos2iv"))
;; (define glRasterPos2s (c-lambda (GLshort GLshort) void "glRasterPos2s"))
;; (define glRasterPos2sv (c-lambda ((pointer GLshort)) void "glRasterPos2sv"))
;; (define glRasterPos3d (c-lambda (GLfloat GLfloat GLfloat) void "glRasterPos3d"))
;; (define glRasterPos3dv (c-lambda ((pointer GLfloat)) void "glRasterPos3dv"))
;; (define glRasterPos3f (c-lambda (GLfloat GLfloat GLfloat) void "glRasterPos3f"))
;; (define glRasterPos3fv (c-lambda ((pointer GLfloat)) void "glRasterPos3fv"))
;; (define glRasterPos3i (c-lambda (GLint GLint GLint) void "glRasterPos3i"))
;; (define glRasterPos3iv (c-lambda ((pointer GLint)) void "glRasterPos3iv"))
;; (define glRasterPos3s (c-lambda (GLshort GLshort GLshort) void "glRasterPos3s"))
;; (define glRasterPos3sv (c-lambda ((pointer GLshort)) void "glRasterPos3sv"))
;; (define glRasterPos4d (c-lambda (GLfloat GLfloat GLfloat GLfloat) void "glRasterPos4d"))
;; (define glRasterPos4dv (c-lambda ((pointer GLfloat)) void "glRasterPos4dv"))
;; (define glRasterPos4f (c-lambda (GLfloat GLfloat GLfloat GLfloat) void "glRasterPos4f"))
;; (define glRasterPos4fv (c-lambda ((pointer GLfloat)) void "glRasterPos4fv"))
;; (define glRasterPos4i (c-lambda (GLint GLint GLint GLint) void "glRasterPos4i"))
;; (define glRasterPos4iv (c-lambda ((pointer GLint)) void "glRasterPos4iv"))
;; (define glRasterPos4s (c-lambda (GLshort GLshort GLshort GLshort) void "glRasterPos4s"))
;; (define glRasterPos4sv (c-lambda ((pointer GLshort)) void "glRasterPos4sv"))
;; (define glReadBuffer (c-lambda (GLenum) void "glReadBuffer"))
;; (define glReadPixels (c-lambda (GLint GLint GLsizei GLsizei GLenum GLenum (pointer GLvoid)) void "glReadPixels"))
;; (define glRectd (c-lambda (GLfloat GLfloat GLfloat GLfloat) void "glRectd"))
;; (define glRectdv (c-lambda ((pointer GLfloat) (pointer GLfloat)) void "glRectdv"))
;; (define glRectf (c-lambda (GLfloat GLfloat GLfloat GLfloat) void "glRectf"))
;; (define glRectfv (c-lambda ((pointer GLfloat) (pointer GLfloat)) void "glRectfv"))
;; (define glRecti (c-lambda (GLint GLint GLint GLint) void "glRecti"))
;; (define glRectiv (c-lambda ((pointer GLint) (pointer GLint)) void "glRectiv"))
;; (define glRects (c-lambda (GLshort GLshort GLshort GLshort) void "glRects"))
;; (define glRectsv (c-lambda ((pointer GLshort) (pointer GLshort)) void "glRectsv"))
;; (define glRenderMode (c-lambda (GLenum) GLint "glRenderMode"))
;; (define glResetHistogram (c-lambda (GLenum) void "glResetHistogram"))
;; (define glResetMinmax (c-lambda (GLenum) void "glResetMinmax"))
;; (define glScissor (c-lambda (GLint GLint GLsizei GLsizei) void "glScissor"))
;; (define glSelectBuffer (c-lambda (GLsizei (pointer GLuint)) void "glSelectBuffer"))
;; (define glSeparableFilter2D (c-lambda (GLenum GLenum GLsizei GLsizei GLenum GLenum (pointer GLvoid) (pointer GLvoid)) void "glSeparableFilter2D"))
;; (define glStencilFunc (c-lambda (GLenum GLint GLuint) void "glStencilFunc"))
;; (define glStencilMask (c-lambda (GLuint) void "glStencilMask"))
;; (define glStencilOp (c-lambda (GLenum GLenum GLenum) void "glStencilOp"))
;; (define glTexCoord1d (c-lambda (GLfloat) void "glTexCoord1d"))
;; (define glTexCoord1dv (c-lambda ((pointer GLfloat)) void "glTexCoord1dv"))
;; (define glTexCoord1f (c-lambda (GLfloat) void "glTexCoord1f"))
;; (define glTexCoord1fv (c-lambda ((pointer GLfloat)) void "glTexCoord1fv"))
;; (define glTexCoord1i (c-lambda (GLint) void "glTexCoord1i"))
;; (define glTexCoord1iv (c-lambda ((pointer GLint)) void "glTexCoord1iv"))
;; (define glTexCoord1s (c-lambda (GLshort) void "glTexCoord1s"))
;; (define glTexCoord1sv (c-lambda ((pointer GLshort)) void "glTexCoord1sv"))
;; (define glTexCoord2d (c-lambda (GLfloat GLfloat) void "glTexCoord2d"))
;; (define glTexCoord2dv (c-lambda ((pointer GLfloat)) void "glTexCoord2dv"))
;; (define glTexCoord2f (c-lambda (GLfloat GLfloat) void "glTexCoord2f"))
;; (define glTexCoord2fv (c-lambda ((pointer GLfloat)) void "glTexCoord2fv"))
;; (define glTexCoord2i (c-lambda (GLint GLint) void "glTexCoord2i"))
;; (define glTexCoord2iv (c-lambda ((pointer GLint)) void "glTexCoord2iv"))
;; (define glTexCoord2s (c-lambda (GLshort GLshort) void "glTexCoord2s"))
;; (define glTexCoord2sv (c-lambda ((pointer GLshort)) void "glTexCoord2sv"))
;; (define glTexCoord3d (c-lambda (GLfloat GLfloat GLfloat) void "glTexCoord3d"))
;; (define glTexCoord3dv (c-lambda ((pointer GLfloat)) void "glTexCoord3dv"))
;; (define glTexCoord3f (c-lambda (GLfloat GLfloat GLfloat) void "glTexCoord3f"))
;; (define glTexCoord3fv (c-lambda ((pointer GLfloat)) void "glTexCoord3fv"))
;; (define glTexCoord3i (c-lambda (GLint GLint GLint) void "glTexCoord3i"))
;; (define glTexCoord3iv (c-lambda ((pointer GLint)) void "glTexCoord3iv"))
;; (define glTexCoord3s (c-lambda (GLshort GLshort GLshort) void "glTexCoord3s"))
;; (define glTexCoord3sv (c-lambda ((pointer GLshort)) void "glTexCoord3sv"))
;; (define glTexCoord4d (c-lambda (GLfloat GLfloat GLfloat GLfloat) void "glTexCoord4d"))
;; (define glTexCoord4dv (c-lambda ((pointer GLfloat)) void "glTexCoord4dv"))
;; (define glTexCoord4f (c-lambda (GLfloat GLfloat GLfloat GLfloat) void "glTexCoord4f"))
;; (define glTexCoord4fv (c-lambda ((pointer GLfloat)) void "glTexCoord4fv"))
;; (define glTexCoord4i (c-lambda (GLint GLint GLint GLint) void "glTexCoord4i"))
;; (define glTexCoord4iv (c-lambda ((pointer GLint)) void "glTexCoord4iv"))
;; (define glTexCoord4s (c-lambda (GLshort GLshort GLshort GLshort) void "glTexCoord4s"))
;; (define glTexCoord4sv (c-lambda ((pointer GLshort)) void "glTexCoord4sv"))
;; (define glTexEnvf (c-lambda (GLenum GLenum GLfloat) void "glTexEnvf"))
;; (define glTexEnvfv (c-lambda (GLenum GLenum (pointer GLfloat)) void "glTexEnvfv"))
;; (define glTexEnviv (c-lambda (GLenum GLenum (pointer GLint)) void "glTexEnviv"))
;; (define glTexGend (c-lambda (GLenum GLenum GLfloat) void "glTexGend"))
;; (define glTexGendv (c-lambda (GLenum GLenum (pointer GLfloat)) void "glTexGendv"))
;; (define glTexGenf (c-lambda (GLenum GLenum GLfloat) void "glTexGenf"))
;; (define glTexGenfv (c-lambda (GLenum GLenum (pointer GLfloat)) void "glTexGenfv"))
;; (define glTexGeni (c-lambda (GLenum GLenum GLint) void "glTexGeni"))
;; (define glTexGeniv (c-lambda (GLenum GLenum (pointer GLint)) void "glTexGeniv"))
;; (define glTexImage1D (c-lambda (GLenum GLint GLenum GLsizei GLint GLenum GLenum (pointer GLvoid)) void "glTexImage1D"))
;; (define glTexImage3D (c-lambda (GLenum GLint GLenum GLsizei GLsizei GLsizei GLint GLenum GLenum (pointer GLvoid)) void "glTexImage3D"))
;; (define glTexParameterf (c-lambda (GLenum GLenum GLfloat) void "glTexParameterf"))
;; (define glTexParameterfv (c-lambda (GLenum GLenum (pointer GLfloat)) void "glTexParameterfv"))
;; (define glTexParameteriv (c-lambda (GLenum GLenum (pointer GLint)) void "glTexParameteriv"))
;; (define glTexSubImage1D (c-lambda (GLenum GLint GLint GLsizei GLenum GLenum (pointer GLvoid)) void "glTexSubImage1D"))
;; (define glTexSubImage2D (c-lambda (GLenum GLint GLint GLint GLsizei GLsizei GLenum GLenum (pointer GLvoid)) void "glTexSubImage2D"))
;; (define glTexSubImage3D (c-lambda (GLenum GLint GLint GLint GLint GLsizei GLsizei GLsizei GLenum GLenum (pointer GLvoid)) void "glTexSubImage3D"))
;; (define glVertexPointer (c-lambda (GLint GLenum GLsizei (pointer GLvoid)) void "glVertexPointer"))
;; (define glViewport (c-lambda (GLint GLint GLsizei GLsizei) void "glViewport"))
;; (define glSampleCoverage (c-lambda (GLclampf GLboolean) void "glSampleCoverage"))
;; (define glSamplePass (c-lambda (GLenum) void "glSamplePass"))
;; (define glLoadTransposeMatrixf (c-lambda ((pointer GLfloat)) void "glLoadTransposeMatrixf"))
;; (define glLoadTransposeMatrixd (c-lambda ((pointer GLfloat)) void "glLoadTransposeMatrixd"))
;; (define glMultTransposeMatrixf (c-lambda ((pointer GLfloat)) void "glMultTransposeMatrixf"))
;; (define glMultTransposeMatrixd (c-lambda ((pointer GLfloat)) void "glMultTransposeMatrixd"))
;; (define glCompressedTexImage3D (c-lambda (GLenum GLint GLenum GLsizei GLsizei GLsizei GLint GLsizei (pointer GLvoid)) void "glCompressedTexImage3D"))
;; (define glCompressedTexImage2D (c-lambda (GLenum GLint GLenum GLsizei GLsizei GLint GLsizei (pointer GLvoid)) void "glCompressedTexImage2D"))
;; (define glCompressedTexImage1D (c-lambda (GLenum GLint GLenum GLsizei GLint GLsizei (pointer GLvoid)) void "glCompressedTexImage1D"))
;; (define glCompressedTexSubImage3D (c-lambda (GLenum GLint GLint GLint GLint GLsizei GLsizei GLsizei GLenum GLsizei (pointer GLvoid)) void "glCompressedTexSubImage3D"))
;; (define glCompressedTexSubImage2D (c-lambda (GLenum GLint GLint GLint GLsizei GLsizei GLenum GLsizei (pointer GLvoid)) void "glCompressedTexSubImage2D"))
;; (define glCompressedTexSubImage1D (c-lambda (GLenum GLint GLint GLsizei GLenum GLsizei (pointer GLvoid)) void "glCompressedTexSubImage1D"))
;; (define glGetCompressedTexImage (c-lambda (GLenum GLint (pointer GLvoid)) void "glGetCompressedTexImage"))
;; (define glActiveTexture (c-lambda (GLenum) void "glActiveTexture"))
;; (define glClientActiveTexture (c-lambda (GLenum) void "glClientActiveTexture"))
;; (define glMultiTexCoord1d (c-lambda (GLenum GLfloat) void "glMultiTexCoord1d"))
;; (define glMultiTexCoord1dv (c-lambda (GLenum (pointer GLfloat)) void "glMultiTexCoord1dv"))
;; (define glMultiTexCoord1f (c-lambda (GLenum GLfloat) void "glMultiTexCoord1f"))
;; (define glMultiTexCoord1fv (c-lambda (GLenum (pointer GLfloat)) void "glMultiTexCoord1fv"))
;; (define glMultiTexCoord1i (c-lambda (GLenum GLint) void "glMultiTexCoord1i"))
;; (define glMultiTexCoord1iv (c-lambda (GLenum (pointer GLint)) void "glMultiTexCoord1iv"))
;; (define glMultiTexCoord1s (c-lambda (GLenum GLshort) void "glMultiTexCoord1s"))
;; (define glMultiTexCoord1sv (c-lambda (GLenum (pointer GLshort)) void "glMultiTexCoord1sv"))
;; (define glMultiTexCoord2d (c-lambda (GLenum GLfloat GLfloat) void "glMultiTexCoord2d"))
;; (define glMultiTexCoord2dv (c-lambda (GLenum (pointer GLfloat)) void "glMultiTexCoord2dv"))
;; (define glMultiTexCoord2f (c-lambda (GLenum GLfloat GLfloat) void "glMultiTexCoord2f"))
;; (define glMultiTexCoord2fv (c-lambda (GLenum (pointer GLfloat)) void "glMultiTexCoord2fv"))
;; (define glMultiTexCoord2i (c-lambda (GLenum GLint GLint) void "glMultiTexCoord2i"))
;; (define glMultiTexCoord2iv (c-lambda (GLenum (pointer GLint)) void "glMultiTexCoord2iv"))
;; (define glMultiTexCoord2s (c-lambda (GLenum GLshort GLshort) void "glMultiTexCoord2s"))
;; (define glMultiTexCoord2sv (c-lambda (GLenum (pointer GLshort)) void "glMultiTexCoord2sv"))
;; (define glMultiTexCoord3d (c-lambda (GLenum GLfloat GLfloat GLfloat) void "glMultiTexCoord3d"))
;; (define glMultiTexCoord3dv (c-lambda (GLenum (pointer GLfloat)) void "glMultiTexCoord3dv"))
;; (define glMultiTexCoord3f (c-lambda (GLenum GLfloat GLfloat GLfloat) void "glMultiTexCoord3f"))
;; (define glMultiTexCoord3fv (c-lambda (GLenum (pointer GLfloat)) void "glMultiTexCoord3fv"))
;; (define glMultiTexCoord3i (c-lambda (GLenum GLint GLint GLint) void "glMultiTexCoord3i"))
;; (define glMultiTexCoord3iv (c-lambda (GLenum (pointer GLint)) void "glMultiTexCoord3iv"))
;; (define glMultiTexCoord3s (c-lambda (GLenum GLshort GLshort GLshort) void "glMultiTexCoord3s"))
;; (define glMultiTexCoord3sv (c-lambda (GLenum (pointer GLshort)) void "glMultiTexCoord3sv"))
;; (define glMultiTexCoord4d (c-lambda (GLenum GLfloat GLfloat GLfloat GLfloat) void "glMultiTexCoord4d"))
;; (define glMultiTexCoord4dv (c-lambda (GLenum (pointer GLfloat)) void "glMultiTexCoord4dv"))
;; (define glMultiTexCoord4f (c-lambda (GLenum GLfloat GLfloat GLfloat GLfloat) void "glMultiTexCoord4f"))
;; (define glMultiTexCoord4fv (c-lambda (GLenum (pointer GLfloat)) void "glMultiTexCoord4fv"))
;; (define glMultiTexCoord4i (c-lambda (GLenum GLint GLint GLint GLint) void "glMultiTexCoord4i"))
;; (define glMultiTexCoord4iv (c-lambda (GLenum (pointer GLint)) void "glMultiTexCoord4iv"))
;; (define glMultiTexCoord4s (c-lambda (GLenum GLshort GLshort GLshort GLshort) void "glMultiTexCoord4s"))
;; (define glMultiTexCoord4sv (c-lambda (GLenum (pointer GLshort)) void "glMultiTexCoord4sv"))
;; (define glFogCoordf (c-lambda (GLfloat) void "glFogCoordf"))
;; (define glFogCoordfv (c-lambda ((pointer GLfloat)) void "glFogCoordfv"))
;; (define glFogCoordd (c-lambda (GLfloat) void "glFogCoordd"))
;; (define glFogCoorddv (c-lambda ((pointer GLfloat)) void "glFogCoorddv"))
;; (define glFogCoordPointer (c-lambda (GLenum GLsizei (pointer GLvoid)) void "glFogCoordPointer"))
;; (define glSecondaryColor3b (c-lambda (GLbyte GLbyte GLbyte) void "glSecondaryColor3b"))
;; (define glSecondaryColor3bv (c-lambda ((pointer GLbyte)) void "glSecondaryColor3bv"))
;; (define glSecondaryColor3d (c-lambda (GLfloat GLfloat GLfloat) void "glSecondaryColor3d"))
;; (define glSecondaryColor3dv (c-lambda ((pointer GLfloat)) void "glSecondaryColor3dv"))
;; (define glSecondaryColor3f (c-lambda (GLfloat GLfloat GLfloat) void "glSecondaryColor3f"))
;; (define glSecondaryColor3fv (c-lambda ((pointer GLfloat)) void "glSecondaryColor3fv"))
;; (define glSecondaryColor3i (c-lambda (GLint GLint GLint) void "glSecondaryColor3i"))
;; (define glSecondaryColor3iv (c-lambda ((pointer GLint)) void "glSecondaryColor3iv"))
;; (define glSecondaryColor3s (c-lambda (GLshort GLshort GLshort) void "glSecondaryColor3s"))
;; (define glSecondaryColor3sv (c-lambda ((pointer GLshort)) void "glSecondaryColor3sv"))
;; (define glSecondaryColor3ub (c-lambda (GLubyte GLubyte GLubyte) void "glSecondaryColor3ub"))
;; (define glSecondaryColor3ubv (c-lambda ((pointer GLubyte)) void "glSecondaryColor3ubv"))
;; (define glSecondaryColor3ui (c-lambda (GLuint GLuint GLuint) void "glSecondaryColor3ui"))
;; (define glSecondaryColor3uiv (c-lambda ((pointer GLuint)) void "glSecondaryColor3uiv"))
;; (define glSecondaryColor3us (c-lambda (GLushort GLushort GLushort) void "glSecondaryColor3us"))
;; (define glSecondaryColor3usv (c-lambda ((pointer GLushort)) void "glSecondaryColor3usv"))
;; (define glSecondaryColorPointer (c-lambda (GLint GLenum GLsizei (pointer GLvoid)) void "glSecondaryColorPointer"))
;; (define glPointParameterf (c-lambda (GLenum GLfloat) void "glPointParameterf"))
;; (define glPointParameterfv (c-lambda (GLenum (pointer GLfloat)) void "glPointParameterfv"))
;; (define glPointParameteri (c-lambda (GLenum GLint) void "glPointParameteri"))
;; (define glPointParameteriv (c-lambda (GLenum (pointer GLint)) void "glPointParameteriv"))
;; (define glBlendFuncSeparate (c-lambda (GLenum GLenum GLenum GLenum) void "glBlendFuncSeparate"))
;; (define glMultiDrawArrays (c-lambda (GLenum (pointer GLint) (pointer GLsizei) GLsizei) void "glMultiDrawArrays"))
;; (define glMultiDrawElements (c-lambda (GLenum (pointer GLsizei) GLenum (pointer (pointer GLvoid)) GLsizei) void "glMultiDrawElements"))
;; (define glWindowPos2d (c-lambda (GLfloat GLfloat) void "glWindowPos2d"))
;; (define glWindowPos2dv (c-lambda ((pointer GLfloat)) void "glWindowPos2dv"))
;; (define glWindowPos2f (c-lambda (GLfloat GLfloat) void "glWindowPos2f"))
;; (define glWindowPos2fv (c-lambda ((pointer GLfloat)) void "glWindowPos2fv"))
;; (define glWindowPos2i (c-lambda (GLint GLint) void "glWindowPos2i"))
;; (define glWindowPos2iv (c-lambda ((pointer GLint)) void "glWindowPos2iv"))
;; (define glWindowPos2s (c-lambda (GLshort GLshort) void "glWindowPos2s"))
;; (define glWindowPos2sv (c-lambda ((pointer GLshort)) void "glWindowPos2sv"))
;; (define glWindowPos3d (c-lambda (GLfloat GLfloat GLfloat) void "glWindowPos3d"))
;; (define glWindowPos3dv (c-lambda ((pointer GLfloat)) void "glWindowPos3dv"))
;; (define glWindowPos3f (c-lambda (GLfloat GLfloat GLfloat) void "glWindowPos3f"))
;; (define glWindowPos3fv (c-lambda ((pointer GLfloat)) void "glWindowPos3fv"))
;; (define glWindowPos3i (c-lambda (GLint GLint GLint) void "glWindowPos3i"))
;; (define glWindowPos3iv (c-lambda ((pointer GLint)) void "glWindowPos3iv"))
;; (define glWindowPos3s (c-lambda (GLshort GLshort GLshort) void "glWindowPos3s"))
;; (define glWindowPos3sv (c-lambda ((pointer GLshort)) void "glWindowPos3sv"))
;; (define glGenQueries (c-lambda (GLsizei (pointer GLuint)) void "glGenQueries"))
;; (define glDeleteQueries (c-lambda (GLsizei (pointer GLuint)) void "glDeleteQueries"))
;; (define glIsQuery (c-lambda (GLuint) GLboolean "glIsQuery"))
;; (define glBeginQuery (c-lambda (GLenum GLuint) void "glBeginQuery"))
;; (define glEndQuery (c-lambda (GLenum) void "glEndQuery"))
;; (define glGetQueryiv (c-lambda (GLenum GLenum (pointer GLint)) void "glGetQueryiv"))
;; (define glGetQueryObjectiv (c-lambda (GLuint GLenum (pointer GLint)) void "glGetQueryObjectiv"))
;; (define glGetQueryObjectuiv (c-lambda (GLuint GLenum (pointer GLuint)) void "glGetQueryObjectuiv"))
;; (define glBindBuffer (c-lambda (GLenum GLuint) void "glBindBuffer"))
;; (define glDeleteBuffers (c-lambda (GLsizei (pointer GLuint)) void "glDeleteBuffers"))
;; (define glGenBuffers (c-lambda (GLsizei (pointer GLuint)) void "glGenBuffers"))
;; (define glIsBuffer (c-lambda (GLuint) GLboolean "glIsBuffer"))
;; (define glBufferData (c-lambda (GLenum GLsizeiptr (pointer GLvoid) GLenum) void "glBufferData"))
;; (define glBufferSubData (c-lambda (GLenum GLintptr GLsizeiptr (pointer GLvoid)) void "glBufferSubData"))
;; (define glGetBufferSubData (c-lambda (GLenum GLintptr GLsizeiptr (pointer GLvoid)) void "glGetBufferSubData"))
;; (define glMapBuffer (c-lambda (GLenum GLenum) (pointer GLvoid) "glMapBuffer"))
;; (define glUnmapBuffer (c-lambda (GLenum) GLboolean "glUnmapBuffer"))
;; (define glGetBufferParameteriv (c-lambda (GLenum GLenum (pointer GLint)) void "glGetBufferParameteriv"))
;; (define glGetBufferPointerv (c-lambda (GLenum GLenum (pointer (pointer GLvoid))) void "glGetBufferPointerv"))
;; (define glDrawBuffers (c-lambda (GLsizei (pointer GLenum)) void "glDrawBuffers"))
;; (define glVertexAttrib1d (c-lambda (GLuint GLfloat) void "glVertexAttrib1d"))
;; (define glVertexAttrib1dv (c-lambda (GLuint (pointer GLfloat)) void "glVertexAttrib1dv"))
;; (define glVertexAttrib1f (c-lambda (GLuint GLfloat) void "glVertexAttrib1f"))
;; (define glVertexAttrib1fv (c-lambda (GLuint (pointer GLfloat)) void "glVertexAttrib1fv"))
;; (define glVertexAttrib1s (c-lambda (GLuint GLshort) void "glVertexAttrib1s"))
;; (define glVertexAttrib1sv (c-lambda (GLuint (pointer GLshort)) void "glVertexAttrib1sv"))
;; (define glVertexAttrib2d (c-lambda (GLuint GLfloat GLfloat) void "glVertexAttrib2d"))
;; (define glVertexAttrib2dv (c-lambda (GLuint (pointer GLfloat)) void "glVertexAttrib2dv"))
;; (define glVertexAttrib2f (c-lambda (GLuint GLfloat GLfloat) void "glVertexAttrib2f"))
;; (define glVertexAttrib2fv (c-lambda (GLuint (pointer GLfloat)) void "glVertexAttrib2fv"))
;; (define glVertexAttrib2s (c-lambda (GLuint GLshort GLshort) void "glVertexAttrib2s"))
;; (define glVertexAttrib2sv (c-lambda (GLuint (pointer GLshort)) void "glVertexAttrib2sv"))
;; (define glVertexAttrib3d (c-lambda (GLuint GLfloat GLfloat GLfloat) void "glVertexAttrib3d"))
;; (define glVertexAttrib3dv (c-lambda (GLuint (pointer GLfloat)) void "glVertexAttrib3dv"))
;; (define glVertexAttrib3f (c-lambda (GLuint GLfloat GLfloat GLfloat) void "glVertexAttrib3f"))
;; (define glVertexAttrib3fv (c-lambda (GLuint (pointer GLfloat)) void "glVertexAttrib3fv"))
;; (define glVertexAttrib3s (c-lambda (GLuint GLshort GLshort GLshort) void "glVertexAttrib3s"))
;; (define glVertexAttrib3sv (c-lambda (GLuint (pointer GLshort)) void "glVertexAttrib3sv"))
;; (define glVertexAttrib4Nbv (c-lambda (GLuint (pointer GLbyte)) void "glVertexAttrib4Nbv"))
;; (define glVertexAttrib4Niv (c-lambda (GLuint (pointer GLint)) void "glVertexAttrib4Niv"))
;; (define glVertexAttrib4Nsv (c-lambda (GLuint (pointer GLshort)) void "glVertexAttrib4Nsv"))
;; (define glVertexAttrib4Nub (c-lambda (GLuint GLubyte GLubyte GLubyte GLubyte) void "glVertexAttrib4Nub"))
;; (define glVertexAttrib4Nubv (c-lambda (GLuint (pointer GLubyte)) void "glVertexAttrib4Nubv"))
;; (define glVertexAttrib4Nuiv (c-lambda (GLuint (pointer GLuint)) void "glVertexAttrib4Nuiv"))
;; (define glVertexAttrib4Nusv (c-lambda (GLuint (pointer GLushort)) void "glVertexAttrib4Nusv"))
;; (define glVertexAttrib4bv (c-lambda (GLuint (pointer GLbyte)) void "glVertexAttrib4bv"))
;; (define glVertexAttrib4d (c-lambda (GLuint GLfloat GLfloat GLfloat GLfloat) void "glVertexAttrib4d"))
;; (define glVertexAttrib4dv (c-lambda (GLuint (pointer GLfloat)) void "glVertexAttrib4dv"))
;; (define glVertexAttrib4f (c-lambda (GLuint GLfloat GLfloat GLfloat GLfloat) void "glVertexAttrib4f"))
;; (define glVertexAttrib4fv (c-lambda (GLuint (pointer GLfloat)) void "glVertexAttrib4fv"))
;; (define glVertexAttrib4iv (c-lambda (GLuint (pointer GLint)) void "glVertexAttrib4iv"))
;; (define glVertexAttrib4s (c-lambda (GLuint GLshort GLshort GLshort GLshort) void "glVertexAttrib4s"))
;; (define glVertexAttrib4sv (c-lambda (GLuint (pointer GLshort)) void "glVertexAttrib4sv"))
;; (define glVertexAttrib4ubv (c-lambda (GLuint (pointer GLubyte)) void "glVertexAttrib4ubv"))
;; (define glVertexAttrib4uiv (c-lambda (GLuint (pointer GLuint)) void "glVertexAttrib4uiv"))
;; (define glVertexAttrib4usv (c-lambda (GLuint (pointer GLushort)) void "glVertexAttrib4usv"))
;; (define glVertexAttribPointer (c-lambda (GLuint GLint GLenum GLboolean GLsizei (pointer GLvoid)) void "glVertexAttribPointer"))
;; (define glEnableVertexAttribArray (c-lambda (GLuint) void "glEnableVertexAttribArray"))
;; (define glDisableVertexAttribArray (c-lambda (GLuint) void "glDisableVertexAttribArray"))
;; (define glGetVertexAttribdv (c-lambda (GLuint GLenum (pointer GLfloat)) void "glGetVertexAttribdv"))
;; (define glGetVertexAttribfv (c-lambda (GLuint GLenum (pointer GLfloat)) void "glGetVertexAttribfv"))
;; (define glGetVertexAttribiv (c-lambda (GLuint GLenum (pointer GLint)) void "glGetVertexAttribiv"))
;; (define glGetVertexAttribPointerv (c-lambda (GLuint GLenum (pointer (pointer GLvoid))) void "glGetVertexAttribPointerv"))
;; (define glDeleteShader (c-lambda (GLuint) void "glDeleteShader"))
;; (define glDetachShader (c-lambda (GLuint GLuint) void "glDetachShader"))
;; (define glCreateShader (c-lambda (GLenum) GLuint "glCreateShader"))
;; (define glShaderSource (c-lambda (GLuint GLsizei (pointer (pointer GLchar)) (pointer GLint)) void "glShaderSource"))
;; (define glCompileShader (c-lambda (GLuint) void "glCompileShader"))
;; (define glCreateProgram (c-lambda () GLuint "glCreateProgram"))
;; (define glAttachShader (c-lambda (GLuint GLuint) void "glAttachShader"))
;; (define glLinkProgram (c-lambda (GLuint) void "glLinkProgram"))
;; (define glUseProgram (c-lambda (GLuint) void "glUseProgram"))
;; (define glDeleteProgram (c-lambda (GLuint) void "glDeleteProgram"))
;; (define glValidateProgram (c-lambda (GLuint) void "glValidateProgram"))
;; (define glUniform1f (c-lambda (GLint GLfloat) void "glUniform1f"))
;; (define glUniform2f (c-lambda (GLint GLfloat GLfloat) void "glUniform2f"))
;; (define glUniform3f (c-lambda (GLint GLfloat GLfloat GLfloat) void "glUniform3f"))
;; (define glUniform4f (c-lambda (GLint GLfloat GLfloat GLfloat GLfloat) void "glUniform4f"))
;; (define glUniform1i (c-lambda (GLint GLint) void "glUniform1i"))
;; (define glUniform2i (c-lambda (GLint GLint GLint) void "glUniform2i"))
;; (define glUniform3i (c-lambda (GLint GLint GLint GLint) void "glUniform3i"))
;; (define glUniform4i (c-lambda (GLint GLint GLint GLint GLint) void "glUniform4i"))
;; (define glUniform1fv (c-lambda (GLint GLsizei (pointer GLfloat)) void "glUniform1fv"))
;; (define glUniform2fv (c-lambda (GLint GLsizei (pointer GLfloat)) void "glUniform2fv"))
;; (define glUniform3fv (c-lambda (GLint GLsizei (pointer GLfloat)) void "glUniform3fv"))
;; (define glUniform4fv (c-lambda (GLint GLsizei (pointer GLfloat)) void "glUniform4fv"))
;; (define glUniform1iv (c-lambda (GLint GLsizei (pointer GLint)) void "glUniform1iv"))
;; (define glUniform2iv (c-lambda (GLint GLsizei (pointer GLint)) void "glUniform2iv"))
;; (define glUniform3iv (c-lambda (GLint GLsizei (pointer GLint)) void "glUniform3iv"))
;; (define glUniform4iv (c-lambda (GLint GLsizei (pointer GLint)) void "glUniform4iv"))
;; (define glUniformMatrix2fv (c-lambda (GLint GLsizei GLboolean (pointer GLfloat)) void "glUniformMatrix2fv"))
;; (define glUniformMatrix3fv (c-lambda (GLint GLsizei GLboolean (pointer GLfloat)) void "glUniformMatrix3fv"))
;; (define glUniformMatrix4fv (c-lambda (GLint GLsizei GLboolean (pointer GLfloat)) void "glUniformMatrix4fv"))
;; (define glIsShader (c-lambda (GLuint) GLboolean "glIsShader"))
;; (define glIsProgram (c-lambda (GLuint) GLboolean "glIsProgram"))
;; (define glGetShaderiv (c-lambda (GLuint GLenum (pointer GLint)) void "glGetShaderiv"))
;; (define glGetProgramiv (c-lambda (GLuint GLenum (pointer GLint)) void "glGetProgramiv"))
;; (define glGetAttachedShaders (c-lambda (GLuint GLsizei (pointer GLsizei) (pointer GLuint)) void "glGetAttachedShaders"))
;; (define glGetShaderInfoLog (c-lambda (GLuint GLsizei (pointer GLsizei) (pointer GLchar)) void "glGetShaderInfoLog"))
;; (define glGetProgramInfoLog (c-lambda (GLuint GLsizei (pointer GLsizei) (pointer GLchar)) void "glGetProgramInfoLog"))
;; (define glGetUniformLocation (c-lambda (GLuint (pointer GLchar)) GLint "glGetUniformLocation"))
;; (define glGetActiveUniform (c-lambda (GLuint GLuint GLsizei (pointer GLsizei) (pointer GLint) (pointer GLenum) (pointer GLchar)) void "glGetActiveUniform"))
;; (define glGetUniformfv (c-lambda (GLuint GLint (pointer GLfloat)) void "glGetUniformfv"))
;; (define glGetUniformiv (c-lambda (GLuint GLint (pointer GLint)) void "glGetUniformiv"))
;; (define glGetShaderSource (c-lambda (GLuint GLsizei (pointer GLsizei) (pointer GLchar)) void "glGetShaderSource"))
;; (define glBindAttribLocation (c-lambda (GLuint GLuint (pointer GLchar)) void "glBindAttribLocation"))
;; (define glGetActiveAttrib (c-lambda (GLuint GLuint GLsizei (pointer GLsizei) (pointer GLint) (pointer GLenum) (pointer GLchar)) void "glGetActiveAttrib"))
;; (define glGetAttribLocation (c-lambda (GLuint (pointer GLchar)) GLint "glGetAttribLocation"))
;; (define glStencilFuncSeparate (c-lambda (GLenum GLenum GLint GLuint) void "glStencilFuncSeparate"))
;; (define glStencilOpSeparate (c-lambda (GLenum GLenum GLenum GLenum) void "glStencilOpSeparate"))
;; (define glStencilMaskSeparate (c-lambda (GLenum GLuint) void "glStencilMaskSeparate"))
;; (define glUniformMatrix2x3fv (c-lambda (GLint GLsizei GLboolean (pointer GLfloat)) void "glUniformMatrix2x3fv"))
;; (define glUniformMatrix3x2fv (c-lambda (GLint GLsizei GLboolean (pointer GLfloat)) void "glUniformMatrix3x2fv"))
;; (define glUniformMatrix2x4fv (c-lambda (GLint GLsizei GLboolean (pointer GLfloat)) void "glUniformMatrix2x4fv"))
;; (define glUniformMatrix4x2fv (c-lambda (GLint GLsizei GLboolean (pointer GLfloat)) void "glUniformMatrix4x2fv"))
;; (define glUniformMatrix3x4fv (c-lambda (GLint GLsizei GLboolean (pointer GLfloat)) void "glUniformMatrix3x4fv"))
;; (define glUniformMatrix4x3fv (c-lambda (GLint GLsizei GLboolean (pointer GLfloat)) void "glUniformMatrix4x3fv"))
